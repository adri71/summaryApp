{"ast":null,"code":"var _jsxFileName = \"/Users/administrador/Desktop/TFMS/Ingieneria Informatica/codigo/fronted_tfm/src/IntroText.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './IntroText.css';\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf'; // Importar solo pdfjs\n\n// Establecer la ruta del worker utilizando una CDN\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\nfunction IntroText({\n  formData,\n  setFormData,\n  loading,\n  handleSubmit\n}) {\n  _s();\n  const [pdfText, setPdfText] = useState('');\n\n  // Manejar cambios en el textarea o input numérico\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Manejar la carga del archivo PDF y extraer el texto\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    const fileReader = new FileReader();\n    fileReader.onload = async function () {\n      const typedarray = new Uint8Array(this.result);\n      const pdf = await pdfjsLib.getDocument(typedarray).promise;\n      let extractedText = '';\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const textContent = await page.getTextContent();\n        const textItems = textContent.items.map(item => item.str).join(' ');\n        extractedText += textItems;\n      }\n      setPdfText(extractedText);\n      setFormData({\n        ...formData,\n        articulo: extractedText\n      });\n    };\n    fileReader.readAsArrayBuffer(file);\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    handleSubmit();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comp1\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Enter the article to be summarized\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"articulo\",\n        placeholder: \"Copy the article here or upload a PDF\",\n        value: formData.articulo,\n        onChange: handleChange,\n        rows: \"20\",\n        cols: \"110\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Upload a PDF: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"application/pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Approximate word length of summary: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"longitud\",\n        value: formData.longitud,\n        onChange: handleChange,\n        min: \"100\",\n        max: \"1000\",\n        placeholder: \"longitud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"b1\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Simplifying...' : 'Simplify'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Texto extra\\xEDdo del PDF (si aplica):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pdfText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(IntroText, \"1c54FiBhvzU9B1kKAZ/12UBcogs=\");\n_c = IntroText;\nexport default IntroText;\nvar _c;\n$RefreshReg$(_c, \"IntroText\");","map":{"version":3,"names":["React","useState","pdfjsLib","jsxDEV","_jsxDEV","GlobalWorkerOptions","workerSrc","version","IntroText","formData","setFormData","loading","handleSubmit","_s","pdfText","setPdfText","handleChange","e","name","value","target","handleFileChange","event","file","files","fileReader","FileReader","onload","typedarray","Uint8Array","result","pdf","getDocument","promise","extractedText","i","numPages","page","getPage","textContent","getTextContent","textItems","items","map","item","str","join","articulo","readAsArrayBuffer","onSubmit","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","rows","cols","type","accept","longitud","min","max","disabled","_c","$RefreshReg$"],"sources":["/Users/administrador/Desktop/TFMS/Ingieneria Informatica/codigo/fronted_tfm/src/IntroText.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './IntroText.css';\nimport * as pdfjsLib from 'pdfjs-dist/build/pdf';  // Importar solo pdfjs\n\n// Establecer la ruta del worker utilizando una CDN\npdfjsLib.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjsLib.version}/pdf.worker.min.js`;\n\nfunction IntroText({ formData, setFormData, loading, handleSubmit }) {\n    const [pdfText, setPdfText] = useState('');\n\n    // Manejar cambios en el textarea o input numérico\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    // Manejar la carga del archivo PDF y extraer el texto\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n\n        const fileReader = new FileReader();\n        fileReader.onload = async function () {\n            const typedarray = new Uint8Array(this.result);\n            const pdf = await pdfjsLib.getDocument(typedarray).promise;\n\n            let extractedText = '';\n            for (let i = 1; i <= pdf.numPages; i++) {\n                const page = await pdf.getPage(i);\n                const textContent = await page.getTextContent();\n                const textItems = textContent.items.map(item => item.str).join(' ');\n                extractedText += textItems;\n            }\n\n            setPdfText(extractedText);\n            setFormData({ ...formData, articulo: extractedText });\n        };\n\n        fileReader.readAsArrayBuffer(file);\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSubmit();\n    };\n\n    return (\n        <div className=\"comp1\">\n            <form onSubmit={onSubmit}>\n                <label><b>Enter the article to be summarized</b></label>\n                <textarea\n                    name=\"articulo\"\n                    placeholder=\"Copy the article here or upload a PDF\"\n                    value={formData.articulo}\n                    onChange={handleChange}\n                    rows=\"20\"\n                    cols=\"110\"\n                />\n                <br/>\n                <label><b>Upload a PDF: </b></label>\n                <input\n                    type=\"file\"\n                    accept=\"application/pdf\"\n                    onChange={handleFileChange}\n                />\n                <br/>\n                <label><b>Approximate word length of summary: </b></label>\n                <input\n                    type=\"number\"\n                    name=\"longitud\"\n                    value={formData.longitud}\n                    onChange={handleChange}\n                    min=\"100\"\n                    max=\"1000\"\n                    placeholder=\"longitud\"\n                />\n                <br/>\n                <button className=\"b1\" type=\"submit\" disabled={loading}>\n                    {loading ? 'Simplifying...' : 'Simplify'}\n                </button>\n            </form>\n            <div>\n                <h3>Texto extraído del PDF (si aplica):</h3>\n                <p>{pdfText}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default IntroText;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}